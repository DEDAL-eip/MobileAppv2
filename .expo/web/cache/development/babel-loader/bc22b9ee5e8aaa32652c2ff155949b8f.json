{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Text, View } from \"../Themed\";\nimport { GlobalButton } from \"../Button\";\nimport { Title } from \"../Title\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var ModalLoginCode = function ModalLoginCode() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    Code = _useState2[0],\n    setCode = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    NewPW = _useState4[0],\n    setNewPW = _useState4[1];\n  return _jsxs(View, {\n    children: [_jsx(Title, {\n      title: \"Code de verification\"\n    }), _jsx(GlobalButton, {\n      onPress: function onPress() {\n        return setOpen(!Open);\n      },\n      title: \"Hide Modal\"\n    }), _jsx(Text, {\n      children: \"Rest Password\"\n    }), _jsx(TextInput, {\n      onChangeText: setCode,\n      value: Code,\n      placeholder: \"Code\",\n      keyboardType: \"numeric\"\n    }), _jsx(TextInput, {\n      onChangeText: setNewPW,\n      value: setNewPW,\n      placeholder: \"set new Password\"\n    }), _jsx(GlobalButton, {\n      onPress: Validate,\n      children: _jsx(Text, {\n        style: styles.textStyle,\n        children: \"Validate\"\n      })\n    }), _jsxs(Text, {\n      children: [\"Code : \", Code]\n    })]\n  });\n};","map":{"version":3,"names":["Text","View","GlobalButton","Title","useState","ModalLoginCode","Code","setCode","NewPW","setNewPW","setOpen","Open","Validate","styles","textStyle"],"sources":["/home/emartin/EIP/ModileAppv2/components/Modal/Login-Code.js"],"sourcesContent":["import { Text, View } from \"../Themed\"\nimport { GlobalButton } from \"../Button\"\nimport { Title } from \"../Title\"\nimport { TextInput } from \"react-native\"\nimport { useState } from \"react\"\n\nexport const ModalLoginCode = () => {\n    const [Code, setCode] = useState(\"\")\n    const [NewPW, setNewPW] = useState(\"\")\n\n\n    return (\n        <View>\n            <Title title='Code de verification'></Title>\n            <GlobalButton\n              onPress={() => setOpen(!Open)}\n              title='Hide Modal'\n            >\n          </GlobalButton>\n          <Text>Rest Password</Text>\n          <TextInput\n            onChangeText={setCode}\n            value={Code}\n            placeholder=\"Code\"\n            keyboardType=\"numeric\"\n\n          />\n          <TextInput\n            onChangeText={setNewPW}\n            value={setNewPW}\n            placeholder=\"set new Password\"\n          />\n            <GlobalButton\n            onPress={Validate}\n            >\n              <Text style={styles.textStyle}>Validate</Text>\n          </GlobalButton>\n          <Text >Code : {Code}</Text>\n          \n        </View>\n    )\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,IAAI;AACnB,SAASC,YAAY;AACrB,SAASC,KAAK;AAAkB;AAEhC,SAASC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAEhC,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAChC,gBAAwBD,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BE,IAAI;IAAEC,OAAO;EACpB,iBAA0BH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/BI,KAAK;IAAEC,QAAQ;EAGtB,OACI,MAAC,IAAI;IAAA,WACD,KAAC,KAAK;MAAC,KAAK,EAAC;IAAsB,EAAS,EAC5C,KAAC,YAAY;MACX,OAAO,EAAE;QAAA,OAAMC,OAAO,CAAC,CAACC,IAAI,CAAC;MAAA,CAAC;MAC9B,KAAK,EAAC;IAAY,EAEP,EACf,KAAC,IAAI;MAAA;IAAA,EAAqB,EAC1B,KAAC,SAAS;MACR,YAAY,EAAEJ,OAAQ;MACtB,KAAK,EAAED,IAAK;MACZ,WAAW,EAAC,MAAM;MAClB,YAAY,EAAC;IAAS,EAEtB,EACF,KAAC,SAAS;MACR,YAAY,EAAEG,QAAS;MACvB,KAAK,EAAEA,QAAS;MAChB,WAAW,EAAC;IAAkB,EAC9B,EACA,KAAC,YAAY;MACb,OAAO,EAAEG,QAAS;MAAA,UAEhB,KAAC,IAAI;QAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;QAAA;MAAA;IAAgB,EACnC,EACf,MAAC,IAAI;MAAA,sBAAUR,IAAI;IAAA,EAAQ;EAAA,EAEtB;AAEf,CAAC"},"metadata":{},"sourceType":"module"}