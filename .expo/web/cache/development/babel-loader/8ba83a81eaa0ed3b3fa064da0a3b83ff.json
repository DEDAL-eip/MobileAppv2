{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\"],\n  _excluded2 = [\"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport DefaultText from \"react-native-web/dist/exports/Text\";\nimport useColorScheme from \"react-native-web/dist/exports/useColorScheme\";\nimport DefaultView from \"react-native-web/dist/exports/View\";\nimport Colors from \"../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useThemeColor(colorName) {\n  var theme = useColorScheme();\n  return Colors.light[colorName];\n}\nexport function Text(props) {\n  var style = props.style,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var color = useThemeColor(otherProps.Type ? otherProps.Type : \"Black\");\n  return _jsx(DefaultText, _objectSpread({\n    style: [{\n      color: color\n    }, style]\n  }, otherProps));\n}\nexport function View(props) {\n  var style = props.style,\n    otherProps = _objectWithoutProperties(props, _excluded2);\n  var backgroundColor = useThemeColor(otherProps.Type ? otherProps.Type : \"White\");\n  console.log([{\n    backgroundColor: backgroundColor\n  }, style]);\n  return _jsx(DefaultView, _objectSpread({\n    style: [{\n      backgroundColor: backgroundColor\n    }, style]\n  }, otherProps));\n}","map":{"version":3,"names":["Colors","useThemeColor","colorName","theme","useColorScheme","light","Text","props","style","otherProps","color","Type","View","backgroundColor","console","log"],"sources":["/home/emartin/EIP/ModileAppv2/components/Themed.js"],"sourcesContent":["// Learn more about Light and Dark modes:\n// https://docs.expo.dev/guides/color-schemes/\nimport {\n  Text as DefaultText,\n  useColorScheme,\n  View as DefaultView,\n} from \"react-native\";\n\nimport Colors from \"../constants/Colors\";\n\nexport function useThemeColor(colorName) {\n  const theme = useColorScheme();\n  return(Colors.light[colorName])\n}\n\nexport function Text(props) {\n  const { style, ...otherProps } = props;\n  const color = useThemeColor(otherProps.Type ? otherProps.Type : \"Black\");\n\n  return <DefaultText style={[{ color }, style]} {...otherProps} />;\n}\n\nexport function View(props) {\n  const { style, ...otherProps } = props;\n  const backgroundColor = useThemeColor(otherProps.Type ? otherProps.Type : \"White\")\n  console.log([{ backgroundColor}, style])\n\n  return <DefaultView style={[{ backgroundColor }, style]} {...otherProps} />;\n}\n"],"mappings":";;;;;;;;;AAQA,OAAOA,MAAM;AAA4B;AAEzC,OAAO,SAASC,aAAa,CAACC,SAAS,EAAE;EACvC,IAAMC,KAAK,GAAGC,cAAc,EAAE;EAC9B,OAAOJ,MAAM,CAACK,KAAK,CAACH,SAAS,CAAC;AAChC;AAEA,OAAO,SAASI,IAAI,CAACC,KAAK,EAAE;EAC1B,IAAQC,KAAK,GAAoBD,KAAK,CAA9BC,KAAK;IAAKC,UAAU,4BAAKF,KAAK;EACtC,IAAMG,KAAK,GAAGT,aAAa,CAACQ,UAAU,CAACE,IAAI,GAAGF,UAAU,CAACE,IAAI,GAAG,OAAO,CAAC;EAExE,OAAO,KAAC,WAAW;IAAC,KAAK,EAAE,CAAC;MAAED,KAAK,EAALA;IAAM,CAAC,EAAEF,KAAK;EAAE,GAAKC,UAAU,EAAI;AACnE;AAEA,OAAO,SAASG,IAAI,CAACL,KAAK,EAAE;EAC1B,IAAQC,KAAK,GAAoBD,KAAK,CAA9BC,KAAK;IAAKC,UAAU,4BAAKF,KAAK;EACtC,IAAMM,eAAe,GAAGZ,aAAa,CAACQ,UAAU,CAACE,IAAI,GAAGF,UAAU,CAACE,IAAI,GAAG,OAAO,CAAC;EAClFG,OAAO,CAACC,GAAG,CAAC,CAAC;IAAEF,eAAe,EAAfA;EAAe,CAAC,EAAEL,KAAK,CAAC,CAAC;EAExC,OAAO,KAAC,WAAW;IAAC,KAAK,EAAE,CAAC;MAAEK,eAAe,EAAfA;IAAgB,CAAC,EAAEL,KAAK;EAAE,GAAKC,UAAU,EAAI;AAC7E"},"metadata":{},"sourceType":"module"}